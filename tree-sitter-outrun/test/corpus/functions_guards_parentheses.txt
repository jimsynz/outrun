================
Guard expression with parentheses
================

def complex_check(x: Integer, y: Integer): Boolean
when (Integer.positive?(x) || Integer.zero?(x)) && Integer.negative?(y) {
    true
}

---

(source_file
  (item
    (function_definition
      (identifier)
      (parameter_list
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier))))
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier)))))
      (return_type
        (type_annotation
          (module_path
            (type_identifier))))
      (guard_clause
        (guard_expression
          (expression
            (binary_logical_and
              (primary_expression
                (expression
                  (binary_logical_or
                    (primary_expression
                      (identifier))
                    (function_call_postfix
                      (identifier)
                      (argument_list
                        (argument
                          (shorthand_argument
                            (identifier)))))
                    (primary_expression
                      (identifier))
                    (function_call_postfix
                      (identifier)
                      (argument_list
                        (argument
                          (shorthand_argument
                            (identifier))))))))
              (primary_expression
                (identifier))
              (function_call_postfix
                (identifier)
                (argument_list
                  (argument
                    (shorthand_argument
                      (identifier)))))))))
      (block
        (statement
          (expression
            (primary_expression
              (literal
                (boolean)))))))))
