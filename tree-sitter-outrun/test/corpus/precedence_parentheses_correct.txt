================
Parentheses override precedence
================

const OVERRIDE: Integer = (2 + 3) * 4

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (binary_multiply
          (primary_expression
            (expression
              (binary_add
                (primary_expression
                  (literal
                    (integer)))
                (primary_expression
                  (literal
                    (integer))))))
          (primary_expression
            (literal
              (integer))))))))

================
Nested parentheses
================

const NESTED: Integer = ((2 + 3) * (4 - 1))

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (expression
            (binary_multiply
              (primary_expression
                (expression
                  (binary_add
                    (primary_expression
                      (literal
                        (integer)))
                    (primary_expression
                      (literal
                        (integer))))))
              (primary_expression
                (expression
                  (binary_subtract
                    (primary_expression
                      (literal
                        (integer)))
                    (primary_expression
                      (literal
                        (integer)))))))))))))

================
Parentheses with comparison
================

const COMP_PAREN: Boolean = (5 + 2) > (3 * 2)

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (binary_greater
          (primary_expression
            (expression
              (binary_add
                (primary_expression
                  (literal
                    (integer)))
                (primary_expression
                  (literal
                    (integer))))))
          (primary_expression
            (expression
              (binary_multiply
                (primary_expression
                  (literal
                    (integer)))
                (primary_expression
                  (literal
                    (integer)))))))))))
