================
Private function with guard clause
================

defp safe_divide(a: Integer, b: Integer): Float
when Integer.non_zero?(b) {
    Float.from_integer(a) / Float.from_integer(b)
}

---

(source_file
  (item
    (function_definition
      (identifier)
      (parameter_list
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier))))
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier)))))
      (return_type
        (type_annotation
          (module_path
            (type_identifier))))
      (guard_clause
        (guard_expression
          (expression
            (primary_expression
              (identifier))
            (function_call_postfix
              (identifier)
              (argument_list
                (argument
                  (shorthand_argument
                    (identifier))))))))
      (block
        (statement
          (expression
            (binary_divide
              (primary_expression
                (identifier))
              (function_call_postfix
                (identifier)
                (argument_list
                  (argument
                    (shorthand_argument
                      (identifier)))))
              (primary_expression
                (identifier))
              (function_call_postfix
                (identifier)
                (argument_list
                  (argument
                    (shorthand_argument
                      (identifier))))))))))))
