================
Shift before bitwise AND
================

const SHIFT_AND: Integer = 8 & 4 << 1

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (binary_bitwise_and
          (primary_expression
            (literal
              (integer)))
          (binary_shift_left
            (primary_expression
              (literal
                (integer)))
            (primary_expression
              (literal
                (integer)))))))))

================
Bitwise AND before bitwise XOR
================

const AND_XOR: Integer = 15 ^ 7 & 3

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (binary_bitwise_xor
          (primary_expression
            (literal
              (integer)))
          (binary_bitwise_and
            (primary_expression
              (literal
                (integer)))
            (primary_expression
              (literal
                (integer)))))))))

================
Bitwise XOR before bitwise OR
================

const XOR_OR: Integer = 8 | 4 ^ 2

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (binary_bitwise_or
          (primary_expression
            (literal
              (integer)))
          (binary_bitwise_xor
            (primary_expression
              (literal
                (integer)))
            (primary_expression
              (literal
                (integer)))))))))