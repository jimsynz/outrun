================
Basic case statement
================

def classify(value: Integer): String {
    case value {
        val when positive?(value: val) -> "positive"
        val when negative?(value: val) -> "negative" 
        _ -> "unknown"
    }
}

---

(source_file
  (item
    (function_definition
      (identifier)
      (parameter_list
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier)))))
      (return_type
        (type_annotation
          (module_path
            (type_identifier))))
      (block
        (statement
          (expression
            (primary_expression
              (case_expression
                (expression
                  (primary_expression
                    (identifier)))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (function_call
                              (identifier)
                              (argument_list
                                (argument
                                  (named_argument
                                    (identifier)
                                    (expression
                                      (primary_expression
                                        (identifier))))))))))))
                  (expression
                    (primary_expression
                      (literal
                        (string
                          (string_content))))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (function_call
                              (identifier)
                              (argument_list
                                (argument
                                  (named_argument
                                    (identifier)
                                    (expression
                                      (primary_expression
                                        (identifier))))))))))))
                  (expression
                    (primary_expression
                      (literal
                        (string
                          (string_content))))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier)))
                  (expression
                    (primary_expression
                      (literal
                        (string
                          (string_content))))))))))))))
