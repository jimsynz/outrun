================
Application trait implementation
================

struct MyApp() {}

impl Application for MyApp {
  def start(args: List<String>): Result<(), ApplicationError> {
    Logger.info(message: "Application starting")
    Result.ok(value: ())
  }
}

---

(source_file
  (item
    (struct_definition
      (type_identifier)))
  (item
    (impl_block
      (trait_spec
        (module_path
          (type_identifier)))
      (type_spec
        (module_path
          (type_identifier)))
      (function_definition
        (identifier)
        (parameter_list
          (parameter
            (identifier)
            (type_annotation
              (module_path
                (type_identifier))
              (generic_args
                (type_annotation
                  (module_path
                    (type_identifier)))))))
        (return_type
          (type_annotation
            (module_path
              (type_identifier))
            (generic_args
              (type_annotation
                (tuple_type))
              (type_annotation
                (module_path
                  (type_identifier))))))
        (block
          (statement
            (expression
              (primary_expression
                (function_call
                  (module_path
                    (type_identifier))
                  (identifier)
                  (argument_list
                    (argument
                      (named_argument
                        (identifier)
                        (expression
                          (primary_expression
                            (literal
                              (string
                                (string_content))))))))))))
          (statement
            (expression
              (primary_expression
                (function_call
                  (module_path
                    (type_identifier))
                  (identifier)
                  (argument_list
                    (argument
                      (named_argument
                        (identifier)
                        (expression
                          (primary_expression
                            (tuple_literal)))))))))))))))
