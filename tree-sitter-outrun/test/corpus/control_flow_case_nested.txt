================
Nested case statements
================

def categorize_value(value: Any): String {
    case value {
        val when Integer.type?(value: val) -> {
            case val {
                val when val > 100 -> "large integer"
                val when val > 0 -> "positive integer"
                0 -> "zero"
                _ -> "negative integer"
            }
        }
        val when String.type?(value: val) -> {
            case String.length(string: val) {
                length when length > 20 -> {
                    case String.contains?(string: val, substring: " ") {
                        true -> "long multi-word string"
                        _ -> "long single-word string"
                    }
                }
                length when length > 0 -> "short string"
                _ -> "empty string"
            }
        }
        _ -> "unknown type"
    }
}

---

(source_file
  (item
    (function_definition
      (identifier)
      (parameter_list
        (parameter
          (identifier)
          (type_annotation
            (module_path
              (type_identifier)))))
      (return_type
        (type_annotation
          (module_path
            (type_identifier))))
      (block
        (statement
          (expression
            (primary_expression
              (case_expression
                (expression
                  (primary_expression
                    (identifier)))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (identifier))
                          (function_call_postfix
                            (identifier)
                            (argument_list
                              (argument
                                (named_argument
                                  (identifier)
                                  (expression
                                    (primary_expression
                                      (identifier)))))))))))
                  (block
                    (statement
                      (expression
                        (primary_expression
                          (case_expression
                            (expression
                              (primary_expression
                                (identifier)))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier))
                                (guard_clause
                                  (guard_expression
                                    (expression
                                      (binary_greater
                                        (primary_expression
                                          (identifier))
                                        (primary_expression
                                          (literal
                                            (integer))))))))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier))
                                (guard_clause
                                  (guard_expression
                                    (expression
                                      (binary_greater
                                        (primary_expression
                                          (identifier))
                                        (primary_expression
                                          (literal
                                            (integer))))))))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (literal
                                    (integer))))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier)))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))))))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (identifier))
                          (function_call_postfix
                            (identifier)
                            (argument_list
                              (argument
                                (named_argument
                                  (identifier)
                                  (expression
                                    (primary_expression
                                      (identifier)))))))))))
                  (block
                    (statement
                      (expression
                        (primary_expression
                          (case_expression
                            (expression
                              (primary_expression
                                (identifier))
                              (function_call_postfix
                                (identifier)
                                (argument_list
                                  (argument
                                    (named_argument
                                      (identifier)
                                      (expression
                                        (primary_expression
                                          (identifier))))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier))
                                (guard_clause
                                  (guard_expression
                                    (expression
                                      (binary_greater
                                        (primary_expression
                                          (identifier))
                                        (primary_expression
                                          (literal
                                            (integer))))))))
                              (block
                                (statement
                                  (expression
                                    (primary_expression
                                      (case_expression
                                        (expression
                                          (primary_expression
                                            (identifier))
                                          (function_call_postfix
                                            (identifier)
                                            (argument_list
                                              (argument
                                                (named_argument
                                                  (identifier)
                                                  (expression
                                                    (primary_expression
                                                      (identifier)))))
                                              (argument
                                                (named_argument
                                                  (identifier)
                                                  (expression
                                                    (primary_expression
                                                      (literal
                                                        (string
                                                          (string_content))))))))))
                                        (case_clause
                                          (case_pattern
                                            (destructure_pattern
                                              (literal
                                                (boolean))))
                                          (expression
                                            (primary_expression
                                              (literal
                                                (string
                                                  (string_content))))))
                                        (case_clause
                                          (case_pattern
                                            (destructure_pattern
                                              (identifier)))
                                          (expression
                                            (primary_expression
                                              (literal
                                                (string
                                                  (string_content))))))))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier))
                                (guard_clause
                                  (guard_expression
                                    (expression
                                      (binary_greater
                                        (primary_expression
                                          (identifier))
                                        (primary_expression
                                          (literal
                                            (integer))))))))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))
                            (case_clause
                              (case_pattern
                                (destructure_pattern
                                  (identifier)))
                              (expression
                                (primary_expression
                                  (literal
                                    (string
                                      (string_content))))))))))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier)))
                  (expression
                    (primary_expression
                      (literal
                        (string
                          (string_content))))))))))))))
