================
Macro with nested blocks and control flow
================

macro try_catch(try_block, catch_block) {
  case ^try_block {
    value when Result.ok?(value: value) -> value
    error when Result.error?(value: error) -> ^catch_block
  }
}

---

(source_file
  (item
    (macro_definition
      (identifier)
      (macro_parameter_list
        (identifier)
        (identifier))
      (block
        (statement
          (expression
            (primary_expression
              (case_expression
                (expression
                  (primary_expression
                    (macro_injection
                      (identifier))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (identifier))
                          (function_call_postfix
                            (identifier)
                            (argument_list
                              (argument
                                (named_argument
                                  (identifier)
                                  (expression
                                    (primary_expression
                                      (identifier)))))))))))
                  (expression
                    (primary_expression
                      (identifier))))
                (case_clause
                  (case_pattern
                    (destructure_pattern
                      (identifier))
                    (guard_clause
                      (guard_expression
                        (expression
                          (primary_expression
                            (identifier))
                          (function_call_postfix
                            (identifier)
                            (argument_list
                              (argument
                                (named_argument
                                  (identifier)
                                  (expression
                                    (primary_expression
                                      (identifier)))))))))))
                  (expression
                    (primary_expression
                      (macro_injection
                        (identifier)))))))))))))
