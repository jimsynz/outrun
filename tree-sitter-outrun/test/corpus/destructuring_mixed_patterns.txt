================
Let binding with tuple destructuring (identifiers only)
================

let (x, y, z) = get_coordinates()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (tuple_destructure
          (destructure_pattern
            (identifier))
          (destructure_pattern
            (identifier))
          (destructure_pattern
            (identifier))))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))

================
Let binding with multiline string destructuring
================

let """
Expected output
with newlines
""" = get_formatted_text()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (literal
          (multiline_string
            (multiline_string_content))))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))

================
Let binding with binary integer destructuring
================

let 0b1010 = get_flags()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (literal
          (integer)))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))

================
Let binding with octal integer destructuring
================

let 0o777 = get_permissions()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (literal
          (integer)))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))

================
Let binding with scientific notation float destructuring
================

let 1.23e-4 = get_precision()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (literal
          (float)))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))

================
Let binding with atom using string syntax
================

let :"complex-atom" = get_status_with_dash()

---

(source_file
  (item
    (let_binding
      (destructure_pattern
        (literal
          (atom
            (string
              (string_content)))))
      (expression
        (primary_expression
          (function_call
            (identifier)))))))
