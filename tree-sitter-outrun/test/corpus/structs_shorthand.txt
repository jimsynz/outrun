================
Struct construction with shorthand fields
================

const USER: User = User { id, email, name }

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (struct_literal
            (struct_literal_start)
            (struct_literal_fields
              (struct_literal_field
                (struct_field_shorthand
                  (identifier)))
              (struct_literal_field
                (struct_field_shorthand
                  (identifier)))
              (struct_literal_field
                (struct_field_shorthand
                  (identifier))))))))))

================
Struct construction with mixed shorthand and explicit fields
================

const USER: User = User { id, email: "test@example.com", name }

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (struct_literal
            (struct_literal_start)
            (struct_literal_fields
              (struct_literal_field
                (struct_field_shorthand
                  (identifier)))
              (struct_literal_field
                (struct_field_assignment
                  (identifier)
                  (expression
                    (primary_expression
                      (literal
                        (string
                          (string_content)))))))
              (struct_literal_field
                (struct_field_shorthand
                  (identifier))))))))))

================
Struct construction with all explicit fields
================

const USER: User = User { id: id, email: email, name: name }

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (struct_literal
            (struct_literal_start)
            (struct_literal_fields
              (struct_literal_field
                (struct_field_assignment
                  (identifier)
                  (expression
                    (primary_expression
                      (identifier)))))
              (struct_literal_field
                (struct_field_assignment
                  (identifier)
                  (expression
                    (primary_expression
                      (identifier)))))
              (struct_literal_field
                (struct_field_assignment
                  (identifier)
                  (expression
                    (primary_expression
                      (identifier))))))))))))

================
Struct construction with shorthand and update syntax
================

const USER: User = User { email, name, ..existing_user }

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (struct_literal
            (struct_literal_start)
            (struct_literal_fields
              (struct_literal_field
                (struct_field_shorthand
                  (identifier)))
              (struct_literal_field
                (struct_field_shorthand
                  (identifier)))
              (struct_update
                (expression
                  (primary_expression
                    (identifier)))))))))))

================
Struct construction with single shorthand field
================

const DATA: Container = Container { value }

---

(source_file
  (item
    (constant_definition
      (type_identifier)
      (type_annotation
        (module_path
          (type_identifier)))
      (expression
        (primary_expression
          (struct_literal
            (struct_literal_start)
            (struct_literal_fields
              (struct_literal_field
                (struct_field_shorthand
                  (identifier))))))))))
