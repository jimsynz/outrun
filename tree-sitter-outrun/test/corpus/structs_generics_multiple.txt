================
Struct with multiple generic parameters
================

struct Pair<T, U>(first: T, second: U) {
    def swap(self: Self): Pair<U, T> {
        Pair { first: self.second, second: self.first }
    }
}

---

(source_file
  (item
    (struct_definition
      (type_identifier)
      (generic_params
        (generic_param
          (type_identifier))
        (generic_param
          (type_identifier)))
      (struct_fields
        (struct_field
          (identifier)
          (type_annotation
            (module_path
              (type_identifier))))
        (struct_field
          (identifier)
          (type_annotation
            (module_path
              (type_identifier)))))
      (function_definition
        (identifier)
        (parameter_list
          (parameter
            (identifier)
            (type_annotation)))
        (return_type
          (type_annotation
            (module_path
              (type_identifier))
            (generic_args
              (type_annotation
                (module_path
                  (type_identifier)))
              (type_annotation
                (module_path
                  (type_identifier))))))
        (block
          (statement
            (expression
              (primary_expression
                (struct_literal
                  (module_path
                    (type_identifier))
                  (struct_literal_fields
                    (struct_literal_field
                      (struct_field_assignment
                        (identifier)
                        (expression
                          (primary_expression
                            (identifier))
                          (field_access
                            (identifier)))))
                    (struct_literal_field
                      (struct_field_assignment
                        (identifier)
                        (expression
                          (primary_expression
                            (identifier))
                          (field_access
                            (identifier)))))))))))))))
