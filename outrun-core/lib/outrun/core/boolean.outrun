@Doc(content: """
Boolean concrete type.

This is the default concrete implementation of the Boolean trait in Outrun.
Boolean literals `true` and `false` default to this type.

## Examples

```outrun
true                  # Defaults to Outrun.Core.Boolean
false                 # Defaults to Outrun.Core.Boolean
```
""")
struct Outrun.Core.Boolean() {}

# Display trait implementation
impl Display for Outrun.Core.Boolean {
    def to_string(value: Self): Outrun.Core.String {
        if value {
            "true"
        } else {
            "false"
        }
    }
}

# Inspect trait implementation
impl Inspect for Outrun.Core.Boolean {
    def inspect(value: Self): Outrun.Core.String {
        if value {
            "true"
        } else {
            "false"
        }
    }
}

# Equality trait implementation
impl Equality for Outrun.Core.Boolean {
    def equal?(lhs: Self, rhs: Self): Outrun.Core.Boolean {
        Outrun.Intrinsic.bool_eq(lhs: lhs, rhs: rhs)
    }
    
    def not_equal?(lhs: Self, rhs: Self): Outrun.Core.Boolean {
        !Outrun.Intrinsic.bool_eq(lhs: lhs, rhs: rhs)
    }
}

# Logical operator trait implementations
impl LogicalAnd for Outrun.Core.Boolean {
    def and(lhs: Self, rhs: Self): Self {
        Outrun.Intrinsic.bool_and(lhs: lhs, rhs: rhs)
    }
}

impl LogicalOr for Outrun.Core.Boolean {
    def or(lhs: Self, rhs: Self): Self {
        Outrun.Intrinsic.bool_or(lhs: lhs, rhs: rhs)
    }
}

impl LogicalNot for Outrun.Core.Boolean {
    def not(value: Self): Self {
        Outrun.Intrinsic.bool_not(value: value)
    }
}

# Boolean trait implementation
impl Boolean for Outrun.Core.Boolean {
    def true?(value: Self): Outrun.Core.Boolean {
        value
    }
}

# Default trait implementation
impl Default for Outrun.Core.Boolean {
    def default(): Self {
        false
    }
}
