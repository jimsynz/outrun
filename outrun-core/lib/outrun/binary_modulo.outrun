@Doc(content: """
Binary modulo trait for the % operator.

The BinaryModulo trait defines the behaviour for the % operator.
When you write `a % b`, it becomes `BinaryModulo.modulo(lhs: a, rhs: b)`.

## Requirements

- Both operands must be the same concrete type
- The result must be the same concrete type as the operands
- No implicit conversions are performed
- Modulo by zero behaviour is type-dependent

## Examples

```outrun
42 % 13                       # BinaryModulo.modulo(lhs: 42, rhs: 13): Integer64
3.14 % 2.0                    # BinaryModulo.modulo(lhs: 3.14, rhs: 2.0): Float64
```
""")
trait BinaryModulo {
    @Doc(content: "Calculate the remainder of dividing left by right")
    def modulo(lhs: Self, rhs: Self): Option<Self>
}
