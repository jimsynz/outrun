@Doc(content: """
Bitwise NOT protocol for the ~ operator.

The BitwiseNot protocol defines the behaviour for the ~ (bitwise complement) operator.
When you write `~a`, it becomes `BitwiseNot.not(value: a)`.

## Requirements

- The operand type must be the same as the result type (typically integers)
- Performs bit-by-bit NOT operation (flips all bits)
- Must satisfy bitwise laws: double complement (~(~a) == a), De Morgan's laws

## Examples

```outrun
~42                           # BitwiseNot.not(value: 42): Integer64
~0xFF                         # BitwiseNot.not(value: 0xFF): Integer64
~flags                        # BitwiseNot.not(value: flags): Integer64
```
""")
protocol BitwiseNot {
    @Doc(content: "Perform bitwise NOT on a value")
    def not(value: Self): Self
}
